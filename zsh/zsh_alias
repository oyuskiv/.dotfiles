####################################################################################
# ls
####################################################################################
alias ls='ls --color=auto'
alias ll='ls -Alp'


####################################################################################
# history
####################################################################################
function fh() {
    eval $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

####################################################################################
# tmux functions
####################################################################################

# select pane
tmpane() {
    local panes current_window current_pane target target_window target_pane
    panes=$(tmux list-panes -s -F '#I:#P - #{pane_current_path} #{pane_current_command}')
    current_pane=$(tmux display-message -p '#I:#P')
    current_window=$(tmux display-message -p '#I')

    target=$(echo "$panes" | grep -v "$current_pane" | fzf +m --reverse) || return

    target_window=$(echo $target | awk 'BEGIN{FS=":|-"} {print$1}')
    target_pane=$(echo $target | awk 'BEGIN{FS=":|-"} {print$2}' | cut -c 1)

    if [[ $current_window -eq $target_window ]]; then
        tmux select-pane -t ${target_window}.${target_pane}
    else
        tmux select-pane -t ${target_window}.${target_pane} &&
        tmux select-window -t $target_window
    fi
}

# create new tmux session or switch to existing one
tm() {
    [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
    if [ $1 ]; then
      tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -c ~ -s $1 && tmux $change -t "$1"); return
    fi
    session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

# select tmux session
tms() {
    local session
    session=$(tmux list-sessions -F "#{session_name}" | fzf --query="$1" --select-1 --exit-0)
    if [[ -n "$TMUX" ]]; then
        tmux switch-client -t "$session"
    else
        tmux attach-session -t "$session"
    fi
}

# kill tmux sessions
tmk() {
    local sessions
    sessions="$(tmux ls | fzf --exit-0 --multi)" || return $?
    local i
    for i in "$sessions"
    do
        echo $i | cut -d ':' -f1 | xargs tmux kill-session -t
    done
}

####################################################################################
# fzf
####################################################################################
alias ffo='fzf --print0 --reverse --preview "bat --color=always {}" --bind "ctrl-j:preview-down,ctrl-k:preview-up" | xargs -0 -r nvim'

####################################################################################
# cd
####################################################################################
alias cd1='cd ..'
alias cd2='cd ../../'
alias cd3='cd ../../../'
alias cd4='cd ../../../../'
alias cd5='cd ../../../../../'
